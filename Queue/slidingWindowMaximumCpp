class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        vector<int> ans;
        deque<int> dq;//dq will have elements in de
        
        for(int i=0; i<nums.size(); i++)
        {
            //remove the  out of the bound 
            if(!dq.empty() && dq.front()== i-k)
            {
                dq.pop_front();
            };
            
            //remove all the smaller no than a[i]
            while(!dq.empty() && nums[dq.back()]<nums[i])//d1.back beacuase dq is storing index
                
            {
                dq.pop_back();
            };
            dq.push_back(i);
            
            //storing max in ans
            if(i>=k-1)
            {
                ans.push_back(nums[dq.front()]);
            }
        } return ans;
    }
};
