
class Solution
{
    public:
    
    
    static bool comp(Item a, Item b)
    {
        double r1=(double)a.value/(double)a.weight;
        double r2=(double)b.value/(double)a.weight;
        r1>r2;
    }
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n)
    {
        // Your code here
        // sort the given array on the basis of wight of the single  unit
        sort(arr, arr+n, comp);
        
        int currWeight=0;
        double finalValue=0.0;
        
        for(int i=0;i<n;i++)
        {
            if(arr[i].weight<=W)
            {
                currWeight+=arr[i].weight;
                finalValue+=arr[i].value;
            }
            else
            {
                int remain= arr[i].weight-currWeight;
                finalValue+=(double)arr[i].value/(double)arr[i].weight*remain;
            }
        }
        return finalValue;
    }
        
};
